#
# This file contains strings that appear in generated usage messages.
#

#
# Prospero Shell Script Name
#
# This item is here to make it available to the Java runtime via a resource bundle.
prospero.dist.name=${prospero.dist.name}

#
# General Usage Sections Headings
#

usage.synopsisHeading = %nUsage:\u0020
# for the main command do not prepend with new line character:
${prospero.dist.name}.usage.synopsisHeading = Usage:\u0020
usage.commandListHeading = %nCommands:%n
usage.optionListHeading = %nOptions:%n

#
# Command Descriptions
#
${prospero.dist.name}.usage.customSynopsis=             @|bold ${prospero.dist.name}|@ [@|fg(yellow) -hv|@] [COMMAND]

${prospero.dist.name}.install.usage.header = Installs a new instance of the application server.
${prospero.dist.name}.install.usage.customSynopsis.0 =             @|bold ${prospero.dist.name} install|@ @|fg(yellow) --profile|@=@|italic <predefined-name>|@ @|fg(yellow) --dir|@=@|italic <target-directory>|@ [@|fg(yellow) OPTION|@]...
${prospero.dist.name}.install.usage.customSynopsis.1 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --profile|@=@|italic <predefined-name>|@ @|fg(yellow) --manifest|@=@|italic <URL/GAV/path>|@ @|fg(yellow) --repositories|@=@|italic <URL>[,...]|@ @|fg(yellow) --dir|@=@|italic <target-directory>|@ [@|fg(yellow) OPTION|@]...
${prospero.dist.name}.install.usage.customSynopsis.2 = \u0020        (to install an installation profile)
${prospero.dist.name}.install.usage.customSynopsis.3 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <GA>|@ @|fg(yellow) --channel|@=@|italic <path>|@ @|fg(yellow) --dir|@=@|italic <target-directory>|@ [@|fg(yellow) OPTION|@]...
${prospero.dist.name}.install.usage.customSynopsis.4 = \u0020        (to install a feature pack)
${prospero.dist.name}.install.usage.customSynopsis.5 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --definition|@=@|italic <path>|@ @|fg(yellow) --dir|@=@|italic <target-directory>|@ [@|fg(yellow) OPTION|@]...
${prospero.dist.name}.install.usage.customSynopsis.6 = \u0020        (to install from a Galleon `@|bold provisioning.xml|@` file)
${prospero.dist.name}.install.usage.customSynopsis.7 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --list-profiles|@
${prospero.dist.name}.install.usage.customSynopsis.8 = \u0020        (to list available installation profiles)


${prospero.dist.name}.update.usage.header  = Updates a server instance with the latest patches.
${prospero.dist.name}.update.usage.description.0 = Update operation can be run either as a one-step (@|bold perform|@) or two-step (@|bold prepare|@+@|bold apply|@) operation.
${prospero.dist.name}.update.usage.description.1 = The @|bold prepare|@ operation allows to create a candidate server with the latest updates while the @|bold apply|@ operation will apply \
   the changes of the candidate server to the base server. The @|bold prepare|@ operation can be completed even if the server is running.
${prospero.dist.name}.update.usage.description.2 = The @|bold perform|@ operation directly updates the base server with the latest versions. The updated server must be offline \
  for the whole operation.

${prospero.dist.name}.update.perform.usage.header  = Applies the latest available updates directly on the server instance.
${prospero.dist.name}.update.perform.usage.customSynopsis.0 = @|bold ${prospero.dist.name} update perform|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) [OPTION]|@...
${prospero.dist.name}.update.perform.usage.customSynopsis.1 = \u0020        (to update a server installation)
${prospero.dist.name}.update.perform.usage.customSynopsis.2 = \u0020 or:  @|bold ${prospero.dist.name} update perform|@ @|fg(yellow) --self|@ [@|fg(yellow) --dir|@=@|italic <path>|@] [@|fg(yellow) OPTION|@]...
${prospero.dist.name}.update.perform.usage.customSynopsis.3 = \u0020        (to update ${prospero.dist.name})

${prospero.dist.name}.update.prepare.usage.header  = Provisions a server candidate with the latest available patches.
${prospero.dist.name}.update.prepare.usage.customSynopsis.0 = \u0020 @|bold ${prospero.dist.name} update prepare|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) --candidate-dir|@=@|italic <path>|@ @|fg(yellow) [OPTION]|@...

${prospero.dist.name}.update.apply.usage.header  = Applies the updates from a server candidate to the base server instance.

${prospero.dist.name}.update.list.usage.header  = List all available component updates.

${prospero.dist.name}.update.subscribe.usage.header  = Subscribes the installation to receive updates.

${prospero.dist.name}.history.usage.header = Lists all the previous installation states.
${prospero.dist.name}.history.usage.description.0 = If the @|bold --revision|@ is provided, it shows changes in that state.

${prospero.dist.name}.revert.usage.header  = Reverts the server to a previous installation state.
${prospero.dist.name}.revert.usage.description.0 = Revert operation can be run either as a one-step (@|bold perform|@) or two-step (@|bold prepare|@+@|bold apply|@) operation.%n
${prospero.dist.name}.revert.usage.description.1 = The @|bold prepare|@ operation allows to create a candidate server that is reverted to the \
  requested installation state while the @|bold apply|@ operation will apply the changes of the candidate server to the base server. \
  The @|bold prepare|@ operation can be completed even if  the server is running.
${prospero.dist.name}.revert.usage.description.2 = The @|bold perform|@ operation directly reverts the base server to the requested \
  previous installation state. The base server must be offline for the whole operation.
${prospero.dist.name}.revert.prepare.usage.header = Provisions a candidate server reverted to requested state at the specified location.
${prospero.dist.name}.revert.prepare.candidate-dir = Path to generate the reverted server candidate into. The original server will not be changed.
${prospero.dist.name}.revert.apply.usage.header = Applies the updates from the candidate server to the base server installation.
${prospero.dist.name}.revert.perform.usage.header.0 = Reverts the base server directly to the specified previous installation state.
${prospero.dist.name}.revert.perform.usage.header.1 = It performs the complete revert operation running both @|bold prepare|@ and @|bold apply|@ steps.

${prospero.dist.name}.channel.usage.header = Manages the channels used by the server to get the latest updates.
${prospero.dist.name}.channel.add.usage.header = Subscribes the installation to a new channel.
${prospero.dist.name}.channel.add.channel.0 = Path to a YAML file containing the definition of the new channel.
${prospero.dist.name}.channel.add.channel.1 = Alternative to --manifest and --repositories.
${prospero.dist.name}.channel.add.manifest.0 = Location of the manifest file for the new channel.
${prospero.dist.name}.channel.add.manifest.1 = Specify the location as a file path, URL or Maven coordinate (groupId:artifactId).
${prospero.dist.name}.channel.add.repositories.0 =  Remote Maven repositories that contain the artifacts required to install the application server.
${prospero.dist.name}.channel.add.repositories.1 = Specify multiple repositories separated by commas. Specify the location of the repositories as URLs or ID::URL pairs.
${prospero.dist.name}.channel.list.usage.header   = Lists the channels used by the installation to get updates
${prospero.dist.name}.channel.remove.usage.header = Unsubscribes the installation from a channel.
${prospero.dist.name}.channel.initialize.usage.header = Add a custom channel to be used by the server
${prospero.dist.name}.channel.promote.usage.header = Promote a bundle of artifacts to a custom repository
${prospero.dist.name}.channel.versions.usage.header = Displays currently used versions of manifests from registered channels.

${prospero.dist.name}.clone.usage.header = Exports installation details required to recreate a server.
${prospero.dist.name}.clone.export.usage.header = Exports the installation details that can be used to recreate a server.
${prospero.dist.name}.clone.recreate.usage.header = Recreates a server from the installation details.

${prospero.dist.name}.completion.usage.header = Generates a bash completion script. To enable auto-completion use the command `source <(${prospero.dist.name} completion)`.
${prospero.dist.name}.completion.usage.description.0 = After you run the following command, if you partially type a command and press the Tab key, the command sequence is automatically completed.
${prospero.dist.name}.completion.usage.description.1 =
${prospero.dist.name}.completion.usage.description.2 = \u0020  source <(${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME})
${prospero.dist.name}.completion.usage.description.3 =
${prospero.dist.name}.completion.usage.description.4 = Alternatively, you can also save the completion script to a file, and evaluate this file
${prospero.dist.name}.completion.usage.description.5 = from your .bashrc script:
${prospero.dist.name}.completion.usage.description.6 =
${prospero.dist.name}.completion.usage.description.7 = \u0020  ${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME} > ~/${prospero.dist.name}_completion
${prospero.dist.name}.completion.usage.description.8 = \u0020  echo \". ~/${prospero.dist.name}_completion\" >> ~/.bashrc
${prospero.dist.name}.completion.usage.description.9 =

${prospero.dist.name}.apply-update.usage.header = Apply previously prepared update to the server. The server has to be stopped during this operation.

${prospero.dist.name}.print-licenses.usage.header = Prints licenses and additional agreements required to install the server.

${prospero.dist.name}.feature-pack.add.fpl = Maven coordinates of a Galleon feature pack to add to the server. The coordinate should consist of <groupId>:<artifactId>.
${prospero.dist.name}.feature-pack.usage.header = Manages the feature packs installed in the server.
${prospero.dist.name}.feature-pack.add.usage.header = Installs a new feature pack in the server.
${prospero.dist.name}.feature-pack.add.layers = Feature Pack layers selected for installation. Specify multiple layers separated by commas.
${prospero.dist.name}.feature-pack.add.target-config = Server configuration file that the Feature Pack changes will be applied to. \
  If not specified, defaults to the @|bold standalone.xml|@.


#
# Parameter Groups Headings
#
# By defining these, the parameter groups will be printed in separate sections introduced by these headings.

localRepoOptions.heading = %nMaven cache:%n

#
# Option Descriptions
#

accept-license-agreements.0 = Accept all the license agreements required by the server.
accept-license-agreements.1 = To view the required license agreements use the @|bold print-licenses|@ command.
archive = Path to the promoted artifact bundle.
manifest.0 = Location of the manifest file for a channel.
manifest.1 = Specify the location as a file path, URL or Maven coordinate (@|bold groupId:artifactId|@).
manifest.2 = Alternative to --channel.
${prospero.dist.name}.channel.promote.manifest = Location of the custom Channel Manifest in GAV form.
repositories.0 = Remote Maven repositories that contain the artifacts required to install the application \
  server. Specify multiple repositories separated by commas. These repositories override any other configured repositories in all the channels for this operation.
repositories.1 = Specify the location of the repositories as URLs or ID::URL pairs.
repositories.2 = These repositories will not be persisted in the server configuration.
${prospero.dist.name}.install.repositories.0 = ${repositories.0}
${prospero.dist.name}.install.repositories.1 = ${repositories.1}
${prospero.dist.name}.install.repositories.2 = Alternative to --channel.
${prospero.dist.name}.install.manifest.0 = Location of the manifest files containing installations components.
${prospero.dist.name}.install.manifest.1 = Specify the locations as a comma-separated list of file paths, URLs or Maven coordinates (@|bold groupId:artifactId|@).
${prospero.dist.name}.install.manifest.2 = Alternative to --channel. Each manifest will create a separate channel using the same repositories.
channel-name = Name of the new channel. Channel names should be unique for the server installation.
${prospero.dist.name}.channel.remove.channel-name = Name of the channel.
customization-repository = URL to repository containing custom artifacts.
definition = Path to the Galleon `@|bold provisioning.xml|@` file.
list-profiles = Displays the available installation profiles. The profiles contain complete provisioning configurations required to install a server.

# General description for the --dir option, applies to all commands unless a command specifies different description:
dir = Location of the existing application server. If not specified, current working directory is used.
# Description of the --dir option specific to the install command:
${prospero.dist.name}.install.dir = Target directory where the application server will be provisioned.
${prospero.dist.name}.clone.recreate.dir = Target directory where the application server will be provisioned.

fpl.0 = Maven coordinates of a Galleon feature pack. The specified feature pack is installed \
  with default layers and packages.
fpl.1 = When you use this option, you should also specify the @|bold --channels|@ or a combination of @|bold --manifest|@ \
  and @|bold --repositories|@ options.
profile.0 = Installation profile. The profiles contain complete provisioning configurations required to install a server.
profile.1 = Available profiles are: [${COMPLETION-CANDIDATES}]
help = Displays the help information for this command.
${prospero.dist.name}.help = Displays the help information for the command.
verbose = Prints additional information if the command fails.
${prospero.dist.name}.verbose = Prints additional information if the command fails.
debug = Prints debug messages.
full = Display the detailed list of all available channels
${prospero.dist.name}.debug = Prints debug messages.
local-cache = Path to the local Maven repository cache. It overrides the default Maven repository at ~/.m2/repository.
no-resolve-local-cache = Perform the operation without resolving or installing artifacts in the local maven cache.
use-default-local-cache = Enable caching and resolving artifacts from the default local Maven cache.
offline = Perform the server installation from local cache or file-system Maven repositories only.
channel.0 = Configuration of channels used in the installation. Defines channel manifests and repositories used to provision a server.
channel.1=Specify as a file path, URL or Maven coordinate (groupId:artifactId).
channel.2=Alternative to --manifest and --repositories.
revision = Hash of an installation state.
repoId = Repository ID
repoUrl = Repository URL
target-repository-url = Target repository to promote artifacts to.
self = Update the installation of ${prospero.dist.name} tool, rather than the server installation.
version = Prints the version of ${prospero.dist.name} and exits.
${prospero.dist.name}.install.version.0 = Select a version of the channel manifest to update the server to.
${prospero.dist.name}.install.version.1 = Each channel version has to be specified as a @|italic channel_name::version|@. Multiple channels can be separated by a comma.
${prospero.dist.name}.install.version.2 = @|bold Note:|@ this command can be used to downgrade the server to a lower manifest version.
yes = Performs the operation without asking for a confirmation.
path = Path of the file to export to or import from.
candidate-dir = Path of the server candidate created using the @|bold --update prepare|@ command.
rm = Remove the candidate server after applying it.
stability_level_header=%nProvisioning stability levels:%n
stability-level.0 = Select the minimal stability of features included in the provisioned server. Setting this property equates to setting both\
  \ @|bold --config-stability-level|@ and @|bold --package-stability-level|@ to the same value.
stability-level.1 = Valid options are ${COMPLETION-CANDIDATES}.
config-stability-level.0 = Select the minimal stability of configurations provisioned in the server. Cannot be used together with @|bold --stability-level|@.
config-stability-level.1 = Valid options are ${COMPLETION-CANDIDATES}.
package-stability-level.0 = Select the  minimal stability of provisioned packages (e.g. JBoss Modules modules) in the server. Cannot be used together with @|bold --stability-level|@.
package-stability-level.1 = Valid options are ${COMPLETION-CANDIDATES}.

${prospero.dist.name}.update.prepare.candidate-dir = Target directory where the candidate server will be provisioned. The existing server is not updated.
${prospero.dist.name}.update.subscribe.product = Specify the product name. This must be a known feature pack supported by ${prospero.dist.name}.
${prospero.dist.name}.update.subscribe.version = Specify the version of the product.
no-conflicts-only = Rejects the operation if any file conflicts are detected. If not used, the user will be asked to \
  confirm automatic conflict resolution, unless @|bold --yes|@ option is used.
dry-run = Prints the changes that would be performed by executing the command, but does not perform any changes on the filesystem.

#
# Exit Codes
#
# This only appears in the main command usage.

${prospero.dist.name}.usage.exitCodeListHeading = %nExit codes:%n
${prospero.dist.name}.usage.exitCodeList.0 = 0:Successful program execution.
${prospero.dist.name}.usage.exitCodeList.1 = 1:Failed operation.
${prospero.dist.name}.usage.exitCodeList.2 = 2:Invalid input arguments.

#
# Footer
#
# This only appears in the main command usage.

${prospero.dist.name}.usage.footer = %nUse `${prospero.dist.name} <COMMAND> --help` to show help information for the command.

#
# Prospero CLI messages
#
#
# Main Command Welcome Message
#
# This is only printed when running prospero without any parameters.
prospero.welcomeMessage = @|bold Welcome to ${prospero.dist.name} CLI!|@\n\
  \n\
  This tool enables you to provision and manage instances of the ${prospero.target.server} application server.\n

prospero.install.header.install.fpl=Installing feature pack: %s
prospero.install.header.install.profile=Installing profile: %s
prospero.install.header.install.definition=Installing galleon provisioning definition: %s
prospero.install.header.channels=Using channels:
prospero.install.complete=Server created in %s
prospero.install.agreement.prompt=Accept the agreement(s) [y/N]
prospero.install.agreement.prompt.cancelled=Installation cancelled
prospero.install.agreement.header=To install the requested server, following Agreements need to be accepted:
prospero.install.agreement.no_agreement=The requested software does not require any Agreements.
prospero.install.agreement.skipped=The Agreement(s) has been accepted via %s
prospero.install.progress.feature-pack.started=Resolving feature-pack
prospero.install.progress.feature-pack.done=Feature-packs resolved.
prospero.install.progress.packages=Installing packages
prospero.install.progress.packages.done=Packages installed.
prospero.install.progress.config=Generating configuration
prospero.install.progress.config.done=Configurations generated.
prospero.install.progress.modules=Installing JBoss modules
prospero.install.progress.modules.done=JBoss modules installed.
prospero.install.progress.download=Downloading artifacts
prospero.install.progress.download.done=Downloaded artifacts.
prospero.install.progress.examples=Installing JBoss examples
prospero.install.progress.examples.done=JBoss examples installed.
prospero.install.progress.versions=Resolving versions
prospero.install.progress.versions.done=Versions resolved.
prospero.install.progress.applying_changes=APPLYING CHANGES
prospero.install.validation.unknown_fpl=Incomplete installation configuration.
prospero.install.validation.unknown_fpl.details=Either a --channels or a combination of --manifest and --repositories is \
  needed when using a custom feature pack.
prospero.install.validation.unknown_profile=Unknown profile [%s]
prospero.install.validation.unknown_profile.details=Did you mean one of [%s]?
prospero.install.unknown_stability_level=Unknown stability level [%s]. Valid levels are: [%s].

prospero.updates.no_updates=No updates found.
prospero.updates.header=Updates found:
prospero.updates.downgrade.warning=%n@|fg(yellow) [*] The update list contain one or more artifacts with lower versions then currently installed. Proceed with caution.|@%n%n
prospero.updates.prompt=Continue with update [y/N]:
prospero.updates.cancelled=Update cancelled
prospero.updates.complete=Update complete!

prospero.revert.started.header=Reverting server %s to state %s
prospero.revert.comparing.changes=Reverted server prepared, comparing changes
prospero.revert.changes.header=Changes found:
prospero.revert.prompt=Continue with revert [y/N]:
prospero.revert.cancelled=Revert cancelled
prospero.revert.complete=Server reverted to state %s.
prospero.revert.apply.header=Applying changes
prospero.revert.apply.validation.candidate.no_changes=Unable to apply candidate.%n  There are no changes to apply to the installation [%s] from the candidate installation [%s].

prospero.updates.started.header=Updating server: %s%n
prospero.updates.apply.header=Applying updates
prospero.updates.apply.validation.candidate.outdated=Unable to apply candidate.%n  Installation at [%s] has been updated since the update candidate [%s] was created.
prospero.updates.apply.validation.candidate.wrong_type=Unable to apply candidate.%n  The candidate at [%s] was not prepared for %s operation.
prospero.updates.apply.validation.candidate.not_candidate=Unable to apply candidate.%n  Installation at [%s] doesn't have a candidate marker file.
prospero.updates.apply.candidate.remove=Remove the candidate directory after applying update.

prospero.updates.apply.candidate.cancel_conflicts = Potential conflicts exist in the installation. Resolve the conflicts in the listed files, or \
  use [%s=false] to preserve user changes where possible.

prospero.updates.build.candidate.header=Building update candidate for %s%n
prospero.updates.build.candidate.complete=Update candidate generated in %s
prospero.updates.build.prompt=Continue with building update [y/N]:
prospero.updates.build.cancelled=Build update cancelled
prospero.updates.build.header=Building updates\n
prospero.updates.build.complete=Build update complete!
prospero.updates.build.validation.dir.not_empty=Selected destination path (%s) needs to be an empty, writable folder.

prospero.updates.list.header=Checking available updates for %s%n

prospero.update.invalid.path=Path `%s` does not contain a server installation provisioned by the %s.
prospero.update.invalid.path.details=Server installation needs to contain following files: `%s`.

prospero.update.self.validation.unknown.installation=Unable to perform self-update - unable to determine installed feature packs.
prospero.update.self.validation.feature_pack=Unable to perform self-update - folder `%s` contains unexpected feature packs.
prospero.update.self.validation.dir.not_found=Unable to locate the installation folder to perform self-update.

prospero.update.subscribe.product.version.required=Please specify product and version to generate metadata information.
prospero.update.subscribe.unknown.product=Unknown product '%s'.
prospero.update.subscribe.write.manifest=Writing Channels manifest to '%s'.
prospero.update.subscribe.write.channels=Writing Channels configuration to '%s'.
prospero.update.subscribe.conflict.prompt=There are conflicts found: \n %s \n\nYou may have local changes or specified wrong version, shall we continue [y/N]
prospero.update.subscribe.conflict.prompt.continue=Copy metadata files.
prospero.update.subscribe.conflict.prompt.cancel=Quit without generating metadata files.
prospero.update.subscribe.meta.exists=Path `%s` contains a server installation provisioned by the %s already.

prospero.downgrade.warning.header=The update will downgrade following channels:
prospero.downgrade.unexpected_versions=The update would introduce one or more unexpected channel downgrades.%n\
If you want to perform the downgrade please use the `--version` parameter like:%n  %s
prospero.update.channel-list.no_updates=All the server channels are at the latest versions.
prospero.update.channel-list.unsupported_channel=Some of the channels the server is subscribed to do not support the versioned manifests. The server has to be subscribed only to Maven channels to use this feature.
prospero.update.channel-list.updates_found.header=Found new versions of channel manifests available:
prospero.update.channel-list.updates.channel_name=channel name:
prospero.update.channel-list.updates.current_version=current version:
prospero.update.channel-list.updates.available_versions=available versions:
prospero.update.channel-list.updates.update_command_suggestion:To perform the update to selected version use update operation with --version parameter like:\n  %s

prospero.history.no_updates=No changes found
prospero.history.feature_pack.title=Feature Pack
prospero.history.configuration_model.title=configuration model

prospero.clone.error.missing_file=The metadata archive to be restored [%s] does not exist.
prospero.clone.success=Server installation was restored.
prospero.clone.start.header=Recreating a server in %s based on %s%n
prospero.clone.config.provisioning=Provisioning configuration:
prospero.clone.config.channels=Subscribed channels:

prospero.export.start.header=Exporting %s installation details to %s
prospero.export.done=Export complete

prospero.channels.list.header=Server %s is subscribed to following channels:%n
prospero.channels.add.header=Subscribing %s to channel %s%n
prospero.channels.versions.header=Installed server components:
prospero.channels.added=Channel '%s' added.
prospero.channels.remove.header=Unsubscribing %s from channel %s%n
prospero.channels.removed=Channel '%s' removed.
prospero.channels.error.notfound=The requested channel doesn't exist
prospero.channels.error.morethanonechannel.found = This operation requires a single channel, but multiple channels found in %s.

prospero.general.argument.dir.validation.detail=Maybe you forgot to specify path to the installation (%s)?
prospero.general.argument.channel.validation.nochannel.detail=Add required channels using [%s] argument.
prospero.general.prompt.reminder=Choose [y/N]:
prospero.general.prompt.yes=y
prospero.general.prompt.no=n
prospero.general.processing_error=Error when processing command:
prospero.general.processing_exit_error=Error when processing command: Exit code %.2f"
prospero.general.operation.completed.time=Operation completed in %.2f seconds.
prospero.general.error.header=ERROR: %s
prospero.general.error.ssl=SSL error, maybe you forgot to configure the certificates
prospero.general.error.host=Unable to resolve or access host
prospero.general.error.resolve.metadata.header=Unable to resolve required channel metadata:
prospero.general.error.resolve.artifacts.header=Unable to resolve artifacts:
prospero.general.error.resolve.artifacts.repositories=Attempted repositories:
prospero.general.error.resolve.missing=missing
prospero.general.error.resolve.checksum_failed=checksum failed
prospero.general.error.resolve.offline=offline
prospero.general.error.resolve.streams.header=Required artifact streams are not available in any of the configured channels.
prospero.general.validation.conflicting_options=Only one of %s and %s can be set.
prospero.general.validation.local_repo.not_directory=Repository path `%s` is a file not a directory.
prospero.general.validation.repo_format=Repository definition [%s] is invalid. The definition format should be [id::url] or [url].
prospero.general.validation.file_path.not_exists=The provided path [%s] doesn't exist or is not accessible. The local repository has to an existing, readable folder.
prospero.general.validation.file_path.invalid=The given file path [%s] is invalid.
prospero.general.validation.url.unsupported_remote_scheme=Invalid URL, only the "http" and "https" schemas are supported for remote URLs: [%s]
prospero.general.validation.url.unsupported_scheme=Invalid URL, only the "file", "http" and "https" schemas are supported: [%s]

prospero.general.error.missing_file=Required file at `%s` cannot be opened.
prospero.general.error.galleon.parse=Failed to parse provisioning configuration: %s
prospero.general.error.feature_pack.not_found=The feature pack `%s` is not available in the subscribed channels.
prospero.general.error.unknown_command=Unknown command `%s`
prospero.general.error.unknown_command.suggestion_multiple=Did you mean one of: %s?%n
prospero.general.error.unknown_command.suggestion_single=Did you mean: %s?%n
prospero.general.error.unknown_command.or=or
prospero.general.error.version_overwrite.channel_not_found=The channel [%s] specified in the version overwrite does not exist in the current configuration. Please check the configuration and version value and try again.
prospero.general.error.version_overwrite.duplicated=Version overwrite defines channel [%s] multiple times. Please make sure each channel is specified only once.
prospero.general.error.version_overwrite.invalid_format=Version overwrite [%s] in not formatted correctly. It should consist of <channel_name>::<version>.
prospero.general.error.version_overwrite.not_complete=The version overwrite argument needs to specify versions for all the channels used by the server.


prospero.channels.custom.validation.exists=Custom repository `%s` already exist.
prospero.channels.custom.validation.format=Channel `%s` needs to have a groupId:artifactId format
prospero.channels.custom.validation.local_repo_create=Unable to create a repository at `%s`.
prospero.channels.custom.validation.channel.exists=Custom channel already exists.
prospero.channels.custom.confirmation.channel=Registering custom channel `%s`

prospero.channels.promote.validation.format=Channel coordinate must be provided in `groupId:artifactId` format
prospero.channels.promote.validation.no_channel_or_repo=Unable to determine custom channel and repository.%nUse `%s` and `%s` to provide correct values.
prospero.channels.promote.prompt=Continue with promoting artifacts: [y/N]:
prospero.channels.promote.prompt.confirm=Promoting artifacts.
prospero.channels.promote.prompt.cancelled=Operation cancelled.

prospero.features.add.header=Installing feature pack `%s` in server `%s`
prospero.features.add.prompt=Continue adding the feature pack? [y/N]:
prospero.features.add.prompt.yes=Applying changes\n
prospero.features.add.prompt.no=Installation cancelled
prospero.features.add.validation.fpl_name=The feature pack name needs to be a coordinate of a Maven artifact (<groupId>:<artifactId>).
prospero.features.add.validation.layer.not_supported=The feature pack `%s` does not provide requested layers [%s].\n \
  Supported layers are [%s].
prospero.features.add.validation.layer.no_layers=The feature pack `%s` does not provide any layers.\n \
  Try removing the --layers parameter.
prospero.features.add.validation.model.not_supported=The feature pack `%s` does not provide requested model `%s`.\n \
  Supported models are [%s].
prospero.features.add.validation.configuration.not_supported=The feature pack `%s` does not provide requested configuration `%s/%s`.
prospero.features.add.validation.layers_required=The feature pack `%s` requires at least one installation layer to be selected (%s).
prospero.features.add.validation.customization_not_supported=The feature pack `%s` does not support customization. Please try again without [%s] arguments.
prospero.features.add.required_licences=Installing feature pack %s requires accepting following license changes:%n

prospero.changes.diff.manifest=manifest
prospero.changes.diff.repositories=repositories
prospero.changes.diff.updated=Updated
prospero.changes.diff.updates=Updates
prospero.changes.diff.added=Added
prospero.changes.diff.removed=Removed
prospero.changes.diff.conf_changes=Configuration changes
prospero.changes.diff.artifact=artifact
prospero.changes.diff.channel=channel
prospero.changes.diff.features_changes=Installed features changes

prospero.changes.conflict.header=Conflicting changes detected in the update:
prospero.general.error.missing.parameter=Error: Missing required argument: (%s)
prospero.install.list.profile.header=Available installation profiles
prospero.install.list.profile.no_profiles.header=No installation profiles available. \n \
  You can use the feature pack location (--fpl) argument to install the server.
prospero.install.list.profile=Profile:\u0020
prospero.install.list.profile.subscribe.channels=Subscribed channels:\u0020
prospero.install.list.profile.featurePacks=Installed feature packs:\u0020

prospero.candidate.apply.error.rolled_back.desc=The incomplete update changes have been rolled back. Please resolve above error and try to perform update again.
prospero.candidate.apply.error.rollback_error.desc=Unable to restore the incomplete update changes. The server might have been left in a corrupted state, please check the backup of the server at %s.